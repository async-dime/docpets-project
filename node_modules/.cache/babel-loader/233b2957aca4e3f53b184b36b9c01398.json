{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gilang/Documents/FE/FinalProject/teamb-frontend/src/components/Navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // import \"./assets/styles/Navbar.sass\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport logo from \"./assets/logo.jpg\";\nimport React, { useState } from \"react\";\nimport { NavDropdown } from \"react-bootstrap\"; // import { Button, Modal } from \"reactstrap\";\n// import ModalSignUp from \"./modal-signup\";\n// import ModalSignIn from \"./modal-signin\";\n\nimport MovieCard from \"./movieCard\";\nimport { Link } from \"react-router-dom\"; // import { FaWindows } from \"react-icons/fa\";\n\nconst NavBar = () => {\n  _s();\n\n  var _movies, _movies$data;\n\n  //states- input query, movies\n  const [query, setQuery] = useState(\"\"); //create the state for movies, and update that state appropriate\n\n  const [clinic, setClinic] = useState([]);\n  const [modalSearchClinic, setModalSearchClinic] = useState(false);\n\n  const toggleModalSearchClinic = () => setModalSearchClinic(!modalSearchClinic);\n\n  const searchClinic = async e => {\n    e.preventDefault();\n    const url = `http://54.254.205.124:3000/movie/search/${query}?page=1&limit=20`;\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      setClinic(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  console.log(\"testttt\", clinic);\n\n  const pic = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faUserCircle,\n    size: \"2x\",\n    style: {\n      color: \"#FCA311\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n\n  const signOut = () => {\n    localStorage.clear(\"token\");\n    window.location.reload();\n  }; //   const [modalSignUp, setModalSignUp] = useState(false);\n  //   const toggleModalSignUp = () => setModalSignUp(!modalSignUp);\n  //   const [modalSignIn, setModalSignIn] = useState(false);\n  //   const toggleModalSignIn = () => setModalSignIn(!modalSignIn);\n  //   const toggleSwitch = () => {\n  //     setModalSignIn(!modalSignIn);\n  //     setModalSignUp(!modalSignUp);\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container w-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"Team G\",\n            className: \"navbar-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"navbar-search\",\n          onSubmit: searchClinic,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"query\",\n            placeholder: \"search for clinic\",\n            value: query,\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggleModalSearchMovies,\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modalSearchClinic,\n            toggle: toggleModalSearchClinic,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-list\",\n              children: (_movies = movies) === null || _movies === void 0 ? void 0 : (_movies$data = _movies.data) === null || _movies$data === void 0 ? void 0 : _movies$data.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n                movie: movie\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n          title: pic,\n          id: \"basic-nav-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"/profile\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"/pagefaq\",\n            children: \"FAQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"/page-settings\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            onClick: signOut,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \" Sign out \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"VfjXcTLFhPue7sB/wmiEdho6mUo=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/gilang/Documents/FE/FinalProject/teamb-frontend/src/components/Navbar.jsx"],"names":["FontAwesomeIcon","faUserCircle","logo","React","useState","NavDropdown","MovieCard","Link","NavBar","query","setQuery","clinic","setClinic","modalSearchClinic","setModalSearchClinic","toggleModalSearchClinic","searchClinic","e","preventDefault","url","res","fetch","data","json","console","log","err","error","pic","color","signOut","localStorage","clear","window","location","reload","target","value","toggleModalSearchMovies","movies","map","movie"],"mappings":"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","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./assets/styles/Navbar.sass\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport logo from \"./assets/logo.jpg\";\nimport React, { useState } from \"react\";\nimport { NavDropdown } from \"react-bootstrap\";\n// import { Button, Modal } from \"reactstrap\";\n// import ModalSignUp from \"./modal-signup\";\n// import ModalSignIn from \"./modal-signin\";\nimport MovieCard from \"./movieCard\";\nimport { Link } from \"react-router-dom\";\n// import { FaWindows } from \"react-icons/fa\";\n\nconst NavBar = () => {\n  //states- input query, movies\n  const [query, setQuery] = useState(\"\");\n  //create the state for movies, and update that state appropriate\n  const [clinic, setClinic] = useState([]);\n\n  const [modalSearchClinic, setModalSearchClinic] = useState(false);\n  const toggleModalSearchClinic = () =>\n    setModalSearchClinic(!modalSearchClinic);\n\n  const searchClinic = async (e) => {\n    e.preventDefault();\n    const url = `http://54.254.205.124:3000/movie/search/${query}?page=1&limit=20`;\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      setClinic(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  console.log(\"testttt\", clinic);\n\n  const pic = (\n    <FontAwesomeIcon\n      icon={faUserCircle}\n      size=\"2x\"\n      style={{ color: \"#FCA311\" }}\n    />\n  );\n  const signOut = () => {\n    localStorage.clear(\"token\");\n    window.location.reload();\n  };\n  //   const [modalSignUp, setModalSignUp] = useState(false);\n  //   const toggleModalSignUp = () => setModalSignUp(!modalSignUp);\n  //   const [modalSignIn, setModalSignIn] = useState(false);\n  //   const toggleModalSignIn = () => setModalSignIn(!modalSignIn);\n  //   const toggleSwitch = () => {\n  //     setModalSignIn(!modalSignIn);\n  //     setModalSignUp(!modalSignUp);\n  //   };\n\n  return (\n    <header>\n      <div className=\"navbar-container w-100\">\n        <div className=\"navbar\">\n          <Link to={`/`}>\n            <img src={logo} alt=\"Team G\" className=\"navbar-logo\"></img>\n          </Link>\n          <Link to={`/`}>\n            <p>Home</p>\n          </Link>\n          <Link to={`/`}>\n            <p>Chat</p>\n          </Link>\n          <form className=\"navbar-search\" onSubmit={searchClinic}>\n            <input\n              type=\"text\"\n              name=\"query\"\n              placeholder=\"search for clinic\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n            <Button onClick={toggleModalSearchMovies} type=\"submit\">\n              Search\n            </Button>\n            <Modal isOpen={modalSearchClinic} toggle={toggleModalSearchClinic}>\n              <div className=\"card-list\">\n                {movies?.data?.map((movie) => (\n                  <MovieCard movie={movie} />\n                ))}\n              </div>\n            </Modal>\n          </form>\n\n          <NavDropdown title={pic} id=\"basic-nav-dropdown\">\n            <NavDropdown.Item>Full Name</NavDropdown.Item>\n            <NavDropdown.Item href=\"/profile\">Profile</NavDropdown.Item>\n            <NavDropdown.Item href=\"/pagefaq\">FAQ</NavDropdown.Item>\n            <NavDropdown.Item href=\"/page-settings\">Settings</NavDropdown.Item>\n            <NavDropdown.Item onClick={signOut}>\n              <Link to=\"/\"> Sign out </Link>\n            </NavDropdown.Item>\n          </NavDropdown>\n\n          {/* <Button onClick={toggleModalSignUp}>Sign Up</Button>\n          <ModalSignUp\n            modal={modalSignUp}\n            toggleModalSignUp={toggleModalSignUp}\n            toggleModalSignIn={toggleModalSignIn}\n            toggleSwitch={toggleSwitch}\n          />\n          <ModalSignIn\n            modal={modalSignIn}\n            toggleModalSignIn={toggleModalSignIn}\n            toggleModalSignUp={toggleModalSignUp}\n            toggleSwitch={toggleSwitch}\n          /> */}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}